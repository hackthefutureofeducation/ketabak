name: Release

on:
  push:
    branches:
      - main

jobs:
  changelog:
    if: github.repository == 'hackthefutureofeducation/ketabak'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq and gh CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gh

      - name: Get npm version
        id: package-version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "current-version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create release branch
        run: |
          git checkout main
          git checkout -b "release-from-${{ github.sha }}"

      - name: Update Cargo.toml version and Cargo.lock
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ steps.package-version.outputs.current-version }}\"/" src-tauri/Cargo.toml
          if [ -f src-tauri/Cargo.lock ]; then
            cargo update --manifest-path src-tauri/Cargo.toml
          fi

      - name: Update Tauri config version
        run: |
          jq --arg v "${{ steps.package-version.outputs.current-version }}" '.version = $v' src-tauri/tauri.conf.json > tmp.json && mv tmp.json src-tauri/tauri.conf.json

      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-file: './package.json'
          git-branch: 'release-from-${{ github.sha }}'
          skip-git-pull: true
          skip-commit: true

      - name: Commit all changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md package.json src-tauri/Cargo.toml src-tauri/tauri.conf.json
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          else
            git commit -m "chore: release version ${{ steps.package-version.outputs.current-version }}"

      - name: Push release branch
        if: success()
        run: git push origin "release-from-${{ github.sha }}"

      - name: Create PR
        if: success() && steps.changelog.outputs.skipped == 'false'
        run: |
          gh pr create \
            --base main \
            --head "release-from-${{ github.sha }}" \
            --title "Merge new release into main" \
            --body "Created by GitHub Action"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge PR
        if: success() && steps.changelog.outputs.skipped == 'false'
        run: |
          gh pr merge \
            --admin \
            --merge \
            --subject "Merge release info" \
            --delete-branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        if: success() && steps.changelog.outputs.skipped == 'false'
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.changelog.outputs.tag }}
          name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
