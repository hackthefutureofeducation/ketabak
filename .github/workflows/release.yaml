name: Release

on:
  push:
    branches:
      - main

jobs:
  changelog:
    if: github.repository == 'hackthefutureofeducation/ketabak'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.package-version.outputs.current-version }}
      tag: ${{ steps.changelog.outputs.tag }}
      changelog: ${{ steps.changelog.outputs.clean_changelog }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq and gh CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gh

      - name: Get npm version
        id: package-version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "current-version=$VERSION" >> $GITHUB_OUTPUT

      - name: Update Cargo.toml version and Cargo.lock
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ steps.package-version.outputs.current-version }}\"/" src-tauri/Cargo.toml
          if [ -f src-tauri/Cargo.lock ]; then
            cargo update --manifest-path src-tauri/Cargo.toml
          fi

      - name: Update Tauri config version
        run: |
          jq --arg v "${{ steps.package-version.outputs.current-version }}" '.version = $v' src-tauri/tauri.conf.json > tmp.json && mv tmp.json src-tauri/tauri.conf.json

      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-file: './package.json'
          skip-commit: true
          skip-git-pull: true

      - name: Commit all changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md package.json src-tauri/Cargo.toml src-tauri/tauri.conf.json
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          else
            git commit -m "chore: release version ${{ steps.package-version.outputs.current-version }}"
            git push origin main
          fi

  build-tauri:
    needs: changelog
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            args: --target aarch64-apple-darwin
          - platform: macos-latest
            args: --target x86_64-apple-darwin
          - platform: ubuntu-22.04
            args: ''
          - platform: windows-latest
            args: ''

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (Linux only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: yarn

      - uses: dtolnay/rust-toolchain@stable
      - uses: swatinem/rust-cache@v2

      - name: Install Rust target (macOS Intel)
        if: matrix.args == '--target x86_64-apple-darwin'
        run: rustup target add x86_64-apple-darwin

      - name: Install frontend deps
        run: yarn install --frozen-lockfile

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ needs.changelog.outputs.tag }}
          releaseName: "Ketabak ${{ needs.changelog.outputs.tag }}"
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}

  publish-release:
    needs: [changelog, build-tauri]
    runs-on: ubuntu-latest
    steps:
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.changelog.outputs.tag }}
          name: "Ketabak ${{ needs.changelog.outputs.tag }}"
          body: ${{ needs.changelog.outputs.changelog }}
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
