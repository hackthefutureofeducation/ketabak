name: Release
on:
  push:
    branches:
      - main

jobs:
  changelog:
    if: github.repository == 'hackthefutureofeducation/ketabak'
    runs-on: ubuntu-latest

    steps:
      # Check out the repository with all releases
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Create a temporary, uniquely named branch to push release info to
      - name: Create temporary branch
        run: git checkout -b "release-from-${{ github.sha }}" "${{ github.sha }}"

      # Get npm version from package.json
      - name: Get npm version
        id: package-version
        run: |
          LF_VERSION=$(jq -r '.version' package.json)
          echo "current-version=$LF_VERSION" >> "$GITHUB_OUTPUT"

      # Update version in src-tauri/Cargo.toml
      - name: Update Cargo.toml version
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ steps.package-version.outputs.current-version }}\"/" src-tauri/Cargo.toml

      - name: Update Tauri config version
        run: |
          jq --arg v "${{ steps.package-version.outputs.current-version }}" '.version = $v' src-tauri/tauri.conf.json > tmp.json && mv tmp.json src-tauri/tauri.conf.json

      # Generate changelog (modifies package.json and creates CHANGELOG.md)
      - name: Generate Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-file: './package.json'
          git-branch: 'release-from-${{ github.sha }}'
          skip-git-pull: true
          skip-commit: true # Don't auto-commit; we'll commit everything manually

      # Commit all changes (changelog + package.json + Cargo.toml + tauri.conf.json)
      - name: Commit all changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md package.json src-tauri/Cargo.toml src-tauri/tauri.conf.json
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: release version ${{ steps.package-version.outputs.current-version }}"
          fi
      # Push the changes to the temporary branch
      - name: Push release branch
        run: git push origin "release-from-${{ github.sha }}"

      # Create PR using GitHub CLI
      - name: Create PR with release info
        if: steps.changelog.outputs.skipped == 'false'
        run: gh pr create --base main --head "release-from-${{ github.sha }}" --title 'Merge new release into main' --body 'Created by GitHub Action'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Merge PR using GitHub CLI
      - name: Merge PR with release info
        if: steps.changelog.outputs.skipped == 'false'
        run: gh pr merge --admin --merge --subject 'Merge release info' --delete-branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create a new release with the last commit
      - name: Create release with the last commit
        if: steps.changelog.outputs.skipped == 'false'
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.changelog.outputs.tag }}
          name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
